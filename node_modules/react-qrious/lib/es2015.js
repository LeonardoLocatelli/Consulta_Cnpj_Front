import React, { useState, useEffect } from 'react';
import QRious$1 from 'qrious';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

const useQrious = (options) => {
    const [qrious] = useState(() => new QRious$1(options));
    const [dataUrl, setDataUrl] = useState(() => qrious.toDataURL(options.mime));
    useEffect(() => {
        qrious.set(options);
        setDataUrl(qrious.toDataURL(options.mime));
    }, [options, qrious]);
    return [dataUrl, qrious];
};

const QRious = (_a) => {
    var { background, backgroundAlpha, foreground, foregroundAlpha, level, mime, padding, value, size } = _a, props = __rest(_a, ["background", "backgroundAlpha", "foreground", "foregroundAlpha", "level", "mime", "padding", "value", "size"]);
    const [dataUrl] = useQrious({
        background,
        backgroundAlpha,
        foreground,
        foregroundAlpha,
        level,
        mime,
        padding,
        size,
        value,
    });
    return React.createElement('img', Object.assign(Object.assign({}, props), { src: dataUrl }));
};

export { QRious, useQrious };
