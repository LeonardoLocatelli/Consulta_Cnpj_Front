{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport storeSynchronize from \"redux-localstore\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport combinedReducers from \"./combinedReducers\";\nconst middleware = [thunk];\nconst useLogger = process.env.REACT_APP_USE_REDUX_LOGGER;\n\nif (process.env.NODE_ENV === \"development\" && useLogger !== \"false\") {\n  middleware.push(logger);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(combinedReducers, composeEnhancers(applyMiddleware(...middleware)));\nexport default store;\nstoreSynchronize(store, {\n  blacklist: [\"messages\"]\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/desafio-front-react/desafio-front-react/src/store/index.js"],"names":["createStore","applyMiddleware","compose","storeSynchronize","thunk","logger","combinedReducers","middleware","useLogger","process","env","REACT_APP_USE_REDUX_LOGGER","NODE_ENV","push","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","blacklist"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,gBAAP,MAA6B,kBAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AACA,MAAMI,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,0BAA9B;;AAEA,IAAIF,OAAO,CAACC,GAAR,CAAYE,QAAZ,KAAyB,aAAzB,IAA0CJ,SAAS,KAAK,OAA5D,EAAqE;AACnED,EAAAA,UAAU,CAACM,IAAX,CAAgBR,MAAhB;AACD;;AAED,MAAMS,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAxE;AAEA,MAAMe,KAAK,GAAGjB,WAAW,CACvBM,gBADuB,EAEvBQ,gBAAgB,CAACb,eAAe,CAAC,GAAGM,UAAJ,CAAhB,CAFO,CAAzB;AAKA,eAAeU,KAAf;AAEAd,gBAAgB,CAACc,KAAD,EAAQ;AACtBC,EAAAA,SAAS,EAAE,CAAC,UAAD;AADW,CAAR,CAAhB","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport storeSynchronize from \"redux-localstore\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\n\nimport combinedReducers from \"./combinedReducers\";\n\nconst middleware = [thunk];\nconst useLogger = process.env.REACT_APP_USE_REDUX_LOGGER;\n\nif (process.env.NODE_ENV === \"development\" && useLogger !== \"false\") {\n  middleware.push(logger);\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combinedReducers,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport default store;\n\nstoreSynchronize(store, {\n  blacklist: [\"messages\"],\n});\n"]},"metadata":{},"sourceType":"module"}